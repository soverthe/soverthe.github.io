m = peripheral.wrap("right") m.setTextScale(2)
m.clear() m.setCursorPos(1,1) m.write("Awaiting input...")
term.clear()
run = true
controls = {"stop","enter/e","leave/l","inventory/inv"}
controls2 = {"wasd"}
inventory = {{"sword","deadly but for you"},{"potion","undrinkable"}}
worldMap = {
{{"\127",16,12},{"\127",16,12},{"\127",16,12},{"\127",16,12},{"\127",16,12},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"~",12,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10}},
{{"\127",16,12},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"~",12,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"~",12,4},{"\127",12,10}},
{{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",10,4},{"\127",10,4},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4}},
{{"\127",12,10},{"~",12,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,8},{"\140",8,6},{"\140",8,6},{"\000",1,8},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\127",10,4}},
{{"\127",12,10},{"\127",10,4},{"\127",10,4},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\156",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\149",13,6},{" ",1,6},{" ",1,6},{"\149",8,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16}},
{{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\156",9,6},{"\140",9,6},{"\140",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,8},{"\140",8,6},{"\140",8,6},{"\000",1,8},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4}},
{{"\127",10,4},{"\000",1,16},{"\001",14,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\148",9,6},{" ",6,6},{" ",6,6},{"w",14,6},{"w",14,6},{" ",6,6},{" ",6,6},{"\025",10,6},{" ",6,6},{" ",6,6},{"\156",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{"A",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\149",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\156",9,6},{"\140",9,6},{"\140",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{"\187",5,6},{"\140",9,6},{"\149",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\156",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{"\215",15,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{"w",14,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\030",13,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",12,10}},
{{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{"\149",9,6},{" ",6,6},{"w",14,6},{"w",14,6},{" ",6,6},{"\156",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",12,10}},
{{"~",12,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{"\156",9,6},{"\141",9,6},{"\140",9,6},{"\140",9,6},{"\156",9,6},{"\140",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{"\149",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\149",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{"w",14,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",16,15},{"~",16,2},{"\127",16,15},{"\127",15,2},{"\127",2,5},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{"\000",1,16},{"\127",10,4}},
{{"\127",10,4},{"\000",1,16},{" ",6,6},{"\156",9,6},{"\140",9,6},{"\133",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\141",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\148",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",15,2},{"\127",15,2},{"\127",2,5},{"\127",15,2},{"~",16,2},{"\127",15,2},{"\127",16,15},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\000",1,16},{" ",6,6},{"\149",9,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\141",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"\148",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",2,5},{"~",16,2},{"\127",15,2},{"\127",16,15},{"\127",15,2},{"~",16,2},{"\127",2,5},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\000",1,16},{" ",6,6},{"\194",1,6},{" ",6,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\141",9,6},{"\148",9,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\127",2,5},{"~",16,2},{"\127",15,2},{"\000",1,16},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"w",14,6},{"w",14,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\141",9,6},{"\148",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4}},
{{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\141",9,6},{"\140",9,6},{"\148",9,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"~",12,4},{"\127",10,4},{"\127",12,10}},
{{"\127",12,10},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\141",9,6},{"\140",9,6},{"\140",9,6},{"\140",9,6},{"h",12,6},{" ",6,6},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",12,10},{"\127",12,10}},
{{"\127",12,10},{"\127",12,10},{"~",12,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{" ",6,6},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10}},
{{"\127",16,12},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"~",12,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\000",1,16},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"\127",10,4},{"~",12,4},{"\127",10,4},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",12,10},{"\127",16,12},{"\127",16,12}}
}
pics = {
grid ={
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0},
{0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0,16,0,0}
},
lighthouse = {
{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,16,4,4,4,4,4,4,4},
{4,4,4,4,5,5,5,4,4,4,4,4,4,4,4,4,4,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,16,1,16,4,4,1,1,9,4},
{4,4,4,5,5,5,5,5,4,4,4,4,4,4,4,1,1,1,9,1,1,1,1,9,4,4,4,4,4,4,4,16,15,15,15,16,4,1,1,1,9},
{1,1,1,5,5,5,5,5,5,4,4,4,4,4,4,1,1,1,9,9,1,9,9,1,9,4,4,4,4,4,4,16,1,1,1,16,4,4,1,9,4},
{1,9,1,1,5,5,5,1,1,1,4,4,4,4,4,4,1,9,9,9,9,9,9,1,9,4,4,4,4,4,16,16,16,16,16,16,16,4,4,4,4},
{9,9,1,1,5,5,5,1,9,4,4,4,4,4,4,4,4,4,4,4,9,9,9,9,4,4,4,1,9,4,4,16,15,15,15,16,4,4,4,4,4},
{4,9,1,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,9,1,9,16,15,15,15,16,4,4,4,4,4},
{4,4,4,4,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,9,16,1,1,1,16,12,12,12,12,12},
{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,12,12,12,12,4,4,12,1,1,1,1,9,1,1,1,16,12,16,16,16,16},
{4,4,4,4,4,4,4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,1,1,9,16,15,15,15,16,16,16,6,6,6},
{4,4,4,4,12,12,12,12,9,12,12,12,12,12,12,1,9,12,1,9,12,12,12,12,12,12,1,1,1,1,9,16,15,15,15,16,6,6,6,6,6},
{12,12,12,12,12,12,12,9,9,9,12,12,12,1,1,1,9,1,1,9,12,1,9,16,16,1,1,1,1,9,6,16,1,1,1,16,6,6,6,14,6},
{12,12,1,12,12,12,12,12,12,12,12,12,1,1,9,9,12,1,9,16,1,1,9,6,1,1,1,9,9,6,6,16,1,1,15,16,9,9,9,14,9},
{12,12,1,1,1,12,12,12,12,12,12,1,1,9,12,1,1,1,9,1,1,9,6,6,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,14},
{12,12,9,1,1,1,1,12,12,12,1,1,9,12,1,1,9,9,1,1,9,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{12,12,12,9,1,1,1,1,1,1,1,1,1,1,9,9,9,1,1,9,14,6,14,6,14,6,6,6,6,6,6,14,6,14,6,14,6,6,6,6,6},
{12,12,12,1,1,9,1,1,9,1,1,1,9,9,12,1,1,9,9,6,6,14,6,14,6,6,6,6,6,6,6,14,6,14,6,14,6,6,6,6,6},
{12,12,12,9,1,1,1,1,1,1,1,1,1,1,1,1,9,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,14,6,14,6,6,6,6,6,6},
{12,12,12,12,9,9,9,9,9,9,9,9,9,9,9,9,4,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,4,16,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6}
},
insideLighthouse = {
{4,4,4,4,4,4,4,4,4,16,9,9,9,1,1,1,1,1,1,8,8,8,8,1,1,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,4,16,9,9,9,1,1,1,1,1,1,8,1,1,8,1,1,16,9,9,16,4,4,4,4,4,4,4,5,5,5,4,4},
{4,4,4,4,4,4,4,4,4,16,9,9,8,1,1,1,1,1,13,8,8,8,8,1,1,16,16,9,16,4,4,4,4,4,4,5,5,5,5,5,4},
{4,4,4,4,4,4,4,4,4,16,9,9,8,1,1,1,1,1,13,8,1,1,8,1,1,16,4,16,16,4,1,1,1,1,1,9,5,5,5,5,5},
{1,9,4,4,4,4,4,4,4,16,9,9,8,8,8,1,1,1,13,8,8,8,8,1,1,9,16,16,16,1,1,1,1,1,1,1,9,5,5,5,5},
{1,1,9,4,4,4,4,4,4,16,9,13,13,13,13,1,13,13,13,8,1,1,8,1,1,9,9,16,16,1,1,1,1,9,1,1,1,1,9,5,5},
{1,1,9,4,4,4,4,4,4,16,9,13,9,1,13,1,13,1,13,8,8,8,8,1,1,9,9,9,16,9,1,9,9,9,1,1,1,1,9,5,4},
{9,1,9,4,4,4,4,4,4,16,9,13,9,1,13,1,13,1,13,8,1,1,8,1,1,9,9,9,16,9,9,9,9,9,9,1,1,9,5,4,4},
{9,9,4,4,4,4,4,4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,4,4,9,9,9,9,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,9,8,1,1,1,1,1,1,1,1,1,1,13,13,1,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,8,8,1,1,1,1,1,1,1,1,1,13,13,1,13,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,9,8,1,16,16,16,16,16,1,1,1,13,1,13,13,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,8,8,1,16,4,16,4,16,1,1,15,1,13,13,1,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,9,8,1,16,16,16,16,16,1,1,5,5,1,1,1,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,8,8,1,16,4,16,4,16,1,1,10,10,1,1,8,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,9,8,1,16,16,16,16,16,15,15,15,15,15,9,8,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,8,8,1,1,1,1,1,1,8,8,8,8,8,8,8,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,16,9,8,9,8,1,1,1,1,1,1,8,1,1,1,1,1,8,9,9,9,16,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,16,9,9,8,1,8,1,13,13,13,13,1,1,1,1,1,1,1,1,1,9,9,9,16,4,4,4,4,4,4,4,4,4,4}
},
fishingHut = {
{4,4,4,4,4,4,4,9,9,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,4,5,2,15,15},
{4,4,4,4,4,9,9,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,4,4,9,9,1,4,4,4,4,4,4,4,4,4,5,2,2,15},
{4,4,4,9,9,1,9,9,9,9,1,9,1,1,1,4,4,4,4,4,4,4,4,4,9,9,1,9,1,1,4,4,4,4,4,5,5,4,5,2,2},
{4,4,4,4,9,9,9,9,9,9,9,9,9,1,4,4,4,4,4,4,4,4,4,4,9,9,9,9,9,9,1,1,4,4,4,4,4,4,4,5,5},
{4,4,4,4,4,4,4,4,9,9,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9,9,9,9,4,4,4,4,4,4,4,5,4,4},
{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9,9,4,4,4,4,4,4,4,4,5,4,5},
{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5},
{4,4,4,4,4,4,4,4,4,13,13,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,13,13,13,13,13,4,4,4,4,4,4,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,13,13,13,13,13,13,13,4,4,4,4,8,14,14,14,6,4,4,4,4,4,4,4,4,4,13,13,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,8,8,8,8,8,4,4,4,4,4,8,14,14,14,6,4,4,4,4,4,4,4,4,13,8,13,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,13,13,13,13,13,4,4,4,4,4,4,8,8,8,4,4,4,4,4,4,4,4,13,8,13,1,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,13,13,16,13,13,4,4,4,4,4,4,4,8,4,4,4,4,4,4,4,4,13,8,13,4,1,4,4,4,4,4,4,4},
{6,6,6,6,6,4,4,4,13,13,16,13,13,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,13,8,13,4,4,16,4,4,4,4,4,4,4},
{6,6,6,6,6,6,6,6,8,8,8,8,8,6,6,6,6,6,4,4,13,4,4,4,4,4,4,4,13,13,4,4,4,16,4,16,4,4,4,4,4},
{14,14,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,8,8,4,4,4,16,16,4,4,4,4,4,4},
{14,14,14,14,14,14,14,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,10,10,10,16,7,10,7,10,10},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,6,6,6,6,6,14,14,14,14,14,6,6,6,6,6,6,6,6,6,10,11,11,11,11,11,10,10},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,6,6,6,6,6,6,6,3,3,12,3,12,12},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,6,6,6,6,6,12,12,12,12,12}
},
fishIdle = {
{4,4,4,9,9,9,9,1,1,1,1,1,1,1,9,9,1,1,1,1,9,1,4,4,4,4,4,4,4,4,4,9,9,9,9,9,9,9,9,9,4},
{4,4,4,4,9,9,9,9,9,9,9,1,9,9,9,9,9,1,1,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4,9,9,9,9,4,4,4},
{4,4,4,4,4,4,4,9,9,9,9,9,9,9,9,9,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{4,10,10,10,10,4,4,4,4,4,4,9,9,9,9,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{10,10,10,10,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,10,10,4,4},
{10,10,10,10,10,10,10,10,4,4,4,4,4,4,4,4,4,4,4,4,10,10,10,10,10,10,10,10,10,10,10,10,4,4,4,10,10,10,10,10,10},
{10,10,10,10,10,10,10,10,10,10,4,4,4,4,10,10,10,10,10,10,10,10,10,10,10,7,10,7,16,10,10,10,10,10,10,10,10,10,10,10,10},
{10,10,16,1,10,1,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10},
{10,6,6,6,6,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,10,3,3,10,10,10,10,10,10,10,10,10,10,10,10},
{10,10,14,14,10,14,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,12,12,12,12,12,12,10,10,10},
{12,12,12,12,12,12,12,12,12,10,10,10,16,10,12,10,12,12,12,12,12,12,12,12,12,12,12,12,10,10,12,12,12,12,12,12,12,12,12,12,12},
{12,12,12,12,12,12,12,12,12,12,12,12,4,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12},
{12,12,12,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12},
{12,12,12,12,12,12,12,12,12,12,12,12,4,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12},
{12,12,16,16,16,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12},
{16,16,16,16,16,16,16,16,12,12,12,12,12,12,12,12,12,16,16,16,12,12,12,12,12,12,12,12,12,16,16,12,12,12,12,16,12,16,15,12,12},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16}
},
fishIdleSecret = {
{14,14,14,3,3,3,3,7,7,7,7,7,7,7,3,3,7,7,7,7,3,7,14,14,14,14,14,14,14,14,14,3,3,3,3,3,3,3,3,3,14},
{14,14,14,14,3,3,3,3,3,3,3,7,3,3,3,3,3,7,7,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,3,3,3,3,14,14,14},
{14,14,14,14,14,14,14,3,3,3,3,3,3,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14},
{14,5,5,5,5,14,14,14,14,14,14,3,3,3,3,3,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14},
{5,5,5,5,5,5,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,5,5,14,14},
{5,5,5,5,5,5,5,5,14,14,14,14,14,14,14,14,14,14,14,14,5,5,5,5,5,5,5,5,5,5,5,5,14,14,14,5,5,5,5,5,5},
{5,5,5,5,5,5,5,5,5,5,14,14,14,14,5,5,5,5,5,5,5,5,5,5,5,5,5,5,16,5,5,5,5,5,5,5,5,5,5,5,5},
{5,5,16,1,5,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,15,15,15,15,5,5,5,5,5,5,5,5,5,5,5},
{5,8,8,8,8,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,2,2,5,5,5,5,5,5,5,5,5,5,5,5},
{5,5,16,16,5,16,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
{5,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5},
{2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,2,2,2,2,2,2,5,5,5},
{2,2,2,2,2,2,2,2,2,5,5,5,6,5,2,5,2,2,2,2,2,2,2,2,2,2,2,2,5,5,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,6,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,2,2,2,2,2,2,2,2,2,2,16,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{2,2,16,16,16,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{16,16,16,16,16,16,16,16,2,2,2,2,2,2,2,2,2,16,16,16,2,2,2,2,2,2,2,2,2,16,16,2,2,2,2,15,2,15,16,2,2},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,2},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,15,15,16,16}
},
riddle = {
{9,9,9,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,9,9,9},
{9,9,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,8,9,9,9,9,9,1,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,9,9},
{9,9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,8,9,9,9,9,9,9,9,1,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9,9},
{9,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,8,9,9,9,9,9,9,9,1,16,16,16,16,16,8,8,8,8,8,8,8,8,8,9},
{9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,8,9,9,1,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9},
{9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9},
{9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9},
{8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,8,9,9,9,9,1,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8},
{8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,8,9,9,9,9,1,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8},
{8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,8,9,9,9,1,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8},
{8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8},
{8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8},
{8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8},
{9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9},
{9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,8,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9},
{9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9},
{9,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,1,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,9},
{9,9,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,8,9,1,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,9,9},
{9,9,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,8,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,9,9},
{9,9,9,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,9,9,9}
},
picrossBackground = {
{5,5,5,4,4,1,1,6,6,4,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{5,5,5,4,1,1,9,6,6,9,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,1,1,1,4},
{5,5,4,4,1,6,6,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,1,1,1,9,1,9},
{5,4,4,4,1,6,6,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,1,1,9,9,9,9,9},
{4,4,4,4,4,6,6,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,6,4,1,9,9,9,9,9,4},
{4,4,4,4,4,6,6,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,6,4,4,1,9,9,9,4,4},
{4,4,4,4,4,6,6,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,6,6,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,6,6,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,4,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,6,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,4,6,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,6,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,4,13,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,4,13,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,4,4,4,4,13,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,8,4,4,4,14,4},
{4,4,4,4,4,4,4,4,4,8,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,4,4,4,8,16,4,4,14,4},
{4,4,4,4,4,4,4,4,4,8,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,8,8,1,1,1,4,4,4,14},
{6,6,4,4,4,4,4,4,4,13,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,1,8,1,4,4,4,4,6,6},
{6,6,6,6,6,4,4,4,4,13,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,1,4,8,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,4,13,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,6,6,6,6,6,6,6,6,6}
},
chess = {
{1,1,1,1,1,1,1,1,16,16,16,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,1,1,1,1,1,1},
{1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,1,1,1,1},
{1,1,1,1,16,16,16,16,16,8,8,9,16,16,16,16,16,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,1,1},
{1,1,16,16,16,16,16,16,8,8,8,9,9,16,16,16,16,16,16,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,16,16,16,16,16,16,8,8,8,8,8,9,9,16,16,16,16,16,16,16,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{1,1,16,16,16,16,16,8,8,8,8,8,9,9,16,16,16,16,16,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{1,1,1,1,16,16,16,8,8,8,8,8,9,9,16,16,16,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,1,1},
{1,1,1,1,1,1,16,16,8,8,8,9,9,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,1,1,1,1},
{1,1,1,1,1,1,1,1,16,8,8,9,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1,1,8,8,9,15,15,15,15,15,15,15,15,15,15,1,1,1,1,1,1,1,1,1,1,16,1,1,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1,16,8,8,9,16,1,1,1,1,1,15,15,15,15,1,1,1,1,1,1,1,1,16,16,16,16,16,1,1,1,1,1,1},
{1,1,1,1,1,1,16,16,8,8,8,9,9,16,16,1,15,15,15,15,1,15,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,1,1,1,1},
{1,1,1,1,16,16,16,16,8,8,8,9,9,15,15,15,15,15,1,1,1,15,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,1,1},
{1,1,16,16,16,16,16,8,8,8,8,8,9,9,15,15,15,16,16,1,1,15,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,15,16,16,16,16,16,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{1,1,16,16,16,16,16,8,8,8,8,8,9,9,16,16,16,16,16,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{1,1,1,1,16,16,16,16,8,8,8,9,9,16,16,16,16,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,1,1},
{1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,16,16,16,1,1,1,1},
{1,1,1,1,1,1,1,1,16,16,16,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1,1,1,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,1,1,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
},
beniswotafoll = {
{1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,4,4},
{4,4,4,1,1,1,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,4,1,1,1,1,4,4,4,4,4,5,5,5,5,5,5,5,4,4},
{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,4,4,5,5,5,5,5,4,4,4},
{14,4,4,4,14,4,4,4,4,4,4,4,4,4,4,4,4,1,1,4,4,1,1,1,1,1,1,4,4,4,4,4,4,4,5,5,5,4,4,4,4},
{10,14,14,10,14,4,4,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{14,14,14,14,14,10,14,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{14,14,14,14,14,14,14,14,14,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{14,14,14,14,14,14,14,14,9,9,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{14,14,14,14,14,14,9,14,14,9,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{14,14,14,14,9,14,9,14,14,4,10,10,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{14,14,9,14,14,14,9,14,9,4,10,10,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4},
{14,9,14,14,14,9,9,14,9,4,10,10,10,4,4,4,4,4,4,4,4,4,14,14,14,7,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4},
{14,9,14,9,14,9,9,9,9,4,10,10,4,4,4,4,4,4,4,4,4,4,7,14,14,14,13,14,14,7,4,4,4,4,4,3,4,4,4,4,4},
{9,9,14,9,9,9,9,9,4,4,4,10,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,7,14,14,14,4,4,4,3,3,3,4,4,4,4},
{9,9,9,9,9,9,8,9,4,4,10,10,4,4,4,4,4,4,4,4,4,4,7,4,7,13,14,13,14,4,14,4,4,4,4,14,4,4,4,15,4},
{9,9,9,9,9,8,8,9,4,4,4,10,4,4,4,4,4,4,4,4,13,4,4,4,14,4,13,13,7,4,7,4,4,4,4,14,4,14,4,15,4},
{9,9,9,9,9,8,8,9,4,4,4,10,4,4,4,4,4,4,4,4,14,4,4,4,4,4,13,13,4,4,4,4,4,4,4,4,14,4,4,14,4},
{14,14,14,9,9,8,8,9,4,4,10,10,10,4,7,4,7,6,4,4,14,4,4,4,4,13,13,13,4,4,4,4,4,4,4,4,14,4,14,14,4},
{14,14,14,14,14,14,10,10,10,10,10,10,10,10,10,10,10,10,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,4,4,14,4},
{14,14,14,14,14,14,14,14,10,10,10,10,10,10,10,10,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14}
},
alienOutside = {
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,16,16,16,16,16,16,16,16,16,16,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16},
{16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,6,6,14,8,8,8,8,8,8,8,8,8,8,8,8,8,16},
{8,8,8,8,8,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,12,6,6,6,6,6,14,8,8,8,8,8,8,8,8,8,8,8,8,8},
{8,8,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,6,6,6,6,6,6,14,12,12,12,12,12,12,12,12,12,12,8,8},
{12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12},
{12,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12},
{10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,4,4,4,4,4,4,4,4,4,4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10},
{10,10,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,10,10,10,10},
{4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4},
{4,4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,4,4,4,4,4},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6}
},
alien = {
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,6,8,8,8,8,6,6,6,6,6,8,8,8,8,6,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,6,9,9,3,5,9,6,6,6,9,3,5,9,9,6,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,9,5,3,9,9,6,9,9,5,3,9,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,14,6,6,6,6,6,6,6,6,6,6,6,6,6,14,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,6,6,6,6,6,6,6,6,6,6,6,14,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,16,16,16,16,16,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,6,6,6,6,6,6,6,6,6,14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,6,6,6,6,6,6,6,14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,6,6,6,6,6,14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,14,6,14,14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,14,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9}
},
guardQuestion = {
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,13,13,15,13,13,15,2,2,2,2,2,2,2,2,2,2,2,2,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,8,8,8,16,13,13,15,13,15,1,15,1,15,1,15,15,15,1,15,15,1,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,8,9,8,15,15,15,15,13,15,15,1,15,1,15,1,15,2,2,1,15,2,1,15},
{16,13,13,13,13,13,13,13,13,13,13,16,16,16,13,13,13,16,9,16,8,16,9,16,13,15,13,15,1,15,1,15,1,15,15,1,1,15,15,1,15},
{16,13,13,13,13,13,13,13,13,13,13,16,8,8,16,13,13,16,8,16,8,16,8,16,15,13,13,15,1,2,15,2,1,15,2,1,1,2,15,1,15},
{16,13,13,13,13,13,13,13,13,13,13,13,16,8,8,16,13,16,9,8,8,8,9,16,13,13,13,15,1,1,15,1,1,15,1,1,1,1,15,1,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,13,16,9,8,9,16,13,13,13,13,15,1,1,15,1,1,15,15,15,1,15,15,1,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,13,16,16,16,13,13,13,13,13,15,1,1,2,1,1,2,2,2,1,2,2,1,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,13,13,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,15,15,15,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,16,15,15,13,13,13,13,13,13,13,15,13,13,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,15,13,15,13,13,13,13,13,13,15,13,15,13,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,15,16,13,15,13,13,13,13,13,15,13,13,13,15,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,13,16,16,16,16,15,16,16,13,13,13,13,13,13,15,13,13,15,13,13,15,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,16,2,16,5,16,16,16,16,16,2,16,13,13,13,13,13,13,13,13,13,15,13,13,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,5,13,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,15,13,13,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,5,16,8,16,8,16,16,16,16,16,13,13,13,13,13,13,13,15,13,13,13,13,13,16},
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,8,16,8,16,13,16,16,16,16,13,13,13,13,13,13,15,13,13,13,13,13,16}
},
guardFacepalm = {
{16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,1,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,1,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16,8,8,8,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,16,1,16,13,13,13,13,13,13,13,13,13,13,13,13,13,16,8,9,8,9,8,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,16,1,16,13,13,16,13,13,13,13,16,16,16,13,13,13,16,9,16,16,16,9,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,16,16,1,16,16,1,16,13,13,13,16,8,8,16,13,13,16,8,16,2,16,8,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{1,16,16,1,16,1,1,16,13,13,13,13,16,8,8,16,13,16,16,16,16,16,9,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,1,1,1,1,1,1,16,13,13,13,13,13,16,16,16,16,16,16,16,16,9,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,16,1,1,1,1,1,16,13,13,13,13,13,13,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,13,16,1,1,1,1,16,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{16,13,13,16,1,1,1,16,13,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,2,2,2,16,1,1,16,2,2,2,13,13,13,13,13,16,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,1,1,1,1,16,1,16,1,1,2,13,13,13,13,13,13,13,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,1,2,1,1,1,16,16,1,1,2,13,13,13,13,13,13,13,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,1,2,2,2,1,2,2,2,1,2,13,13,13,13,13,13,13,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,1,2,1,2,1,2,1,2,1,2,13,13,13,13,13,13,13,16,16,16,16,16,2,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,1,2,1,2,1,2,2,2,1,2,13,13,13,13,13,13,13,16,16,16,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,1,1,1,1,1,1,1,1,1,2,13,13,13,13,13,13,13,16,8,16,8,16,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,13,16},
{2,2,2,2,2,2,2,2,2,2,2,13,13,13,13,13,13,13,16,8,16,8,16,13,16,16,16,16,13,13,13,13,13,13,13,13,13,13,13,13,16}
},
castle = {
{12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,12,9,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{1,12,12,8,8,9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{12,12,16,16,8,8,9,12,12,12,1,12,12,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{12,12,16,8,8,9,9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{12,12,16,16,8,8,9,12,12,12,12,12,12,1,12,12,12,1,12,12,12,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{12,12,12,8,8,9,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{12,12,12,12,12,12,12,12,12,12,12,12,1,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{12,12,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{14,12,14,12,14,12,12,12,12,12,12,12,12,12,12,12,12,12,1,12,12,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{14,12,14,12,14,12,12,12,1,12,12,12,12,12,12,12,8,12,12,12,12,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{12,14,12,14,12,12,12,12,12,12,12,12,14,12,14,12,8,12,8,8,12,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{14,14,14,14,14,12,12,12,12,12,12,12,14,12,14,12,16,12,8,8,12,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{14,14,14,14,14,14,14,14,12,12,14,14,14,14,14,14,16,12,16,16,14,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,16,16,16,14,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,14,16,16,14,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,14,8,8,14,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,14,8,8,14,13,16,16,16,16,16,16,16,8,8,8,8,8,8,9,9,9,8,8,16},
{14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,14,8,8,14,13,16,16,16,16,16,16,8,8,8,8,8,8,8,9,9,8,8,16,16}
},
office = {
{16,16,16,16,16,16,16,16,16,16,4,4,4,4,4,4,4,4,4,1,1,4,4,1,1,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1},
{16,9,9,9,9,9,9,9,9,9,16,16,16,16,16,16,4,4,4,1,1,1,1,1,1,1,4,4,4,4,4,4,1,1,1,1,1,1,1,1,1},
{16,9,16,16,16,16,16,9,9,9,9,9,9,9,9,9,16,16,16,16,16,1,1,1,1,1,1,1,4,4,4,4,4,1,1,1,4,1,1,1,4},
{16,9,16,4,4,4,16,9,9,16,16,16,16,9,9,9,9,9,9,9,16,4,1,4,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1},
{16,9,16,4,4,4,16,9,9,16,8,8,16,9,9,16,16,16,16,9,16,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,1,1,1,1},
{16,9,16,4,4,4,16,9,9,16,4,4,16,9,9,16,8,8,16,9,16,4,4,4,4,4,4,4,4,9,9,9,4,4,4,4,4,4,1,4,9},
{16,9,16,4,4,4,16,9,9,16,4,4,16,9,9,16,4,4,16,9,16,4,4,4,4,4,4,4,9,9,9,9,9,4,4,4,4,4,4,9,9},
{16,9,16,16,16,16,16,9,9,16,16,16,16,9,9,16,16,16,16,9,16,4,4,4,4,4,4,9,9,9,9,9,9,9,4,4,4,4,8,8,9},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,4,4,4,4,4,8,9,8,9,9,9,9,9,4,4,4,8,8,8,8},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,4,4,4,4,8,8,8,8,8,8,9,9,8,8,4,8,8,8,8,8},
{16,9,16,16,16,16,16,9,9,9,9,9,9,9,9,9,9,9,9,9,16,4,4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
{16,9,16,8,8,8,16,9,9,16,16,16,16,9,9,9,9,9,9,9,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
{16,9,16,8,8,8,16,9,9,16,4,4,16,9,9,16,16,4,16,9,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
{16,9,16,8,8,8,16,9,9,16,4,4,16,9,9,4,2,2,16,9,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
{16,9,16,8,8,8,16,9,9,16,4,4,16,9,9,16,2,2,4,9,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8},
{16,9,16,16,16,16,16,9,9,16,16,16,16,9,9,16,4,16,16,9,16,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,8,8,8,8},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,9,9,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,9,9,9,9,9,9,9,9,9,9,9,6,6,6,6,6,6,6,6,6},
{16,9,16,16,16,16,16,9,9,9,9,9,9,9,9,9,9,9,9,9,16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{16,9,16,4,4,4,16,9,9,16,16,16,16,9,9,9,9,9,9,9,16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9}
},
officeFail = {
{16,16,16,16,16,16,16,16,16,16,4,4,4,4,4,4,4,4,4,1,1,4,4,1,1,4,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1},
{16,9,9,9,9,9,9,9,9,9,16,16,16,16,16,16,4,4,4,1,1,1,1,1,1,1,2,4,4,4,4,4,1,1,1,1,1,1,1,1,1},
{16,9,16,16,16,16,16,9,9,9,9,9,9,9,9,9,16,16,16,16,16,1,1,1,1,1,1,1,4,4,4,4,4,1,1,1,4,11,1,1,4},
{16,9,16,4,4,4,16,9,9,16,16,16,16,9,9,9,9,9,9,9,16,4,1,2,1,4,2,4,4,2,15,4,4,4,4,4,4,4,4,4,1},
{16,9,16,4,4,4,16,9,9,16,8,8,16,9,9,16,16,16,16,9,16,4,4,4,2,4,2,4,2,4,9,4,4,4,11,4,4,11,1,1,11},
{16,9,16,4,4,4,16,9,9,16,4,4,16,9,9,16,8,8,16,9,16,4,4,4,4,4,4,15,4,9,15,9,4,15,4,11,4,11,1,11,9},
{16,9,16,4,4,4,16,9,9,16,4,4,16,9,9,16,4,4,16,9,16,2,4,2,2,4,2,4,2,2,15,2,15,4,4,4,4,4,4,9,9},
{16,9,16,16,16,16,16,9,9,16,16,16,16,9,9,16,16,16,16,9,16,4,4,4,4,4,4,9,9,9,9,9,11,9,11,11,4,11,8,11,11},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,4,4,4,2,15,2,15,2,9,15,9,15,15,4,15,4,8,8,8,8},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,4,4,2,4,8,2,8,8,2,8,9,9,8,8,11,8,11,8,11,8},
{16,9,16,16,16,16,16,9,9,9,9,9,9,9,9,9,9,9,9,9,16,4,4,8,8,8,8,8,15,8,15,8,15,8,11,8,8,11,8,8,11},
{16,9,16,8,8,8,16,9,9,16,16,16,16,9,9,9,9,9,9,9,16,8,8,8,8,8,2,15,8,8,15,8,8,15,8,8,8,8,8,8,8},
{16,9,16,8,8,8,16,9,9,16,4,4,16,9,9,16,16,4,16,9,16,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,11,8,8,8},
{16,9,16,8,8,8,16,9,9,16,4,4,16,9,9,4,2,2,16,9,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16},
{16,9,16,8,8,8,16,9,9,16,4,4,16,9,9,16,2,2,4,9,16,16,3,3,3,16,3,16,16,3,16,3,16,16,16,3,16,3,16,3,16},
{16,9,16,16,16,16,16,9,9,16,16,16,16,9,9,16,4,16,16,9,16,16,3,12,12,3,12,3,16,3,16,3,16,16,16,3,16,3,16,3,16},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,16,3,3,16,3,3,3,16,3,16,3,16,16,16,3,16,3,16,3,16},
{16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,16,16,3,12,16,3,12,3,16,3,16,3,16,16,16,12,16,12,16,12,16},
{16,9,16,16,16,16,16,9,9,9,9,9,9,9,9,9,9,9,9,9,16,16,3,16,16,3,16,3,16,3,16,3,3,3,16,3,16,3,16,3,16},
{16,9,16,4,4,4,16,9,9,16,16,16,16,9,9,9,9,9,9,9,16,16,12,16,16,12,16,12,16,12,16,12,12,12,16,12,16,12,16,12,16}
},
pizzeria = {
{4,4,4,4,4,16,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,16,4,4},
{4,4,4,6,6,16,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,16,4,4},
{4,4,6,6,6,16,5,5,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,5,5,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,16,5,5,2,2,15,15,15,2,2,5,5,5,2,2,15,15,15,2,2,16,5,5,5,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,5,16,5,5,2,2,15,15,15,2,2,5,5,5,2,2,15,15,15,2,2,16,5,5,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,5,16,5,5,2,2,15,15,15,2,2,5,5,5,2,2,15,15,15,2,2,16,5,5,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,5,5,16,5,5,2,2,15,15,15,2,2,5,5,5,2,2,15,15,15,2,2,16,5,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,5,5,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,5,5,5,16,15,15,5,5,5,15,15,15,5,5,5,15,15,15,5,5,5,15,15,16,5,5,5,5,5,16,4,4},
{4,4,4,4,4,16,5,5,5,5,5,5,16,15,15,15,5,5,5,15,15,15,5,5,5,15,15,15,5,5,5,15,16,5,5,5,5,5,16,6,4},
{4,4,4,4,4,16,5,5,5,5,5,5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,5,5,5,5,16,6,6},
{4,4,4,4,4,16,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,16,6,6},
{4,4,4,4,4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,5,16,16,16,16,16,16,16,16,16,5,5,16,6,6},
{4,4,4,4,4,16,15,15,1,15,15,1,15,15,1,15,1,16,4,1,4,4,1,4,16,5,5,16,9,9,13,5,15,9,9,16,5,5,16,6,6},
{4,4,4,4,4,16,15,15,1,15,15,1,15,1,1,15,15,16,1,4,4,1,4,4,16,5,5,16,9,13,5,5,5,5,9,16,5,5,16,6,6},
{4,4,4,4,4,16,15,15,1,15,1,1,15,15,1,15,15,16,4,4,1,4,16,1,16,5,5,16,9,13,5,15,5,5,9,16,5,5,16,6,6},
{4,6,6,4,4,16,16,16,16,16,16,16,16,16,16,16,16,16,4,1,4,4,16,4,16,5,5,16,9,9,13,5,15,9,9,16,5,5,16,6,6},
{6,6,6,6,6,16,5,5,5,5,16,16,16,5,5,5,5,16,1,4,4,1,16,4,16,5,5,16,16,16,16,16,16,16,16,16,5,5,16,6,6},
{6,6,6,6,6,16,5,5,5,16,16,5,16,16,5,5,5,16,4,4,1,4,4,1,16,5,5,5,5,5,5,5,5,5,5,5,5,5,16,6,6},
{6,6,6,6,6,16,5,5,16,16,5,5,5,16,16,5,5,16,4,1,4,4,1,4,16,5,5,5,5,5,5,5,5,5,5,5,5,5,16,6,6}
},
lavaLake = {
{6,6,6,6,6,6,6,6,14,6,14,6,14,6,6,14,6,14,6,14,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,6,15,6,6,6},
{6,6,6,6,6,6,6,6,6,14,6,14,6,6,6,6,6,6,6,14,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,15,1,15,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,15,15,1,15,15,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,15,15,15,1,15,15,15},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,15,15,15,15,15,15,15,15},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,15,15,15,15,15,1,15,15,15},
{6,6,6,6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,16,16,16,16,16,16,15,15,15,15,2,2,2,2,15,15,15,2,15,2,2,2,2,5,16,16,16,16,6,6,6,6,6,6,6},
{6,6,6,6,16,16,16,2,2,2,2,15,15,15,2,2,2,5,5,2,2,15,15,15,2,2,15,2,5,5,5,2,5,16,16,16,16,6,6,6,6},
{6,6,6,16,16,16,16,5,2,2,2,15,2,2,2,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,15,16,16,16,16,6,6,6},
{6,6,16,16,16,16,5,5,5,2,2,2,2,2,2,2,2,2,2,2,15,15,2,2,15,2,2,2,2,2,15,15,15,15,15,15,15,16,16,16,16},
{6,6,16,16,16,16,16,16,16,16,5,5,2,2,2,2,2,2,15,15,15,15,15,15,2,2,2,15,2,2,2,2,2,2,5,5,15,16,16,16,16},
{6,16,16,16,16,16,16,16,16,5,2,5,5,2,5,2,2,2,2,15,15,2,16,16,2,2,2,2,2,2,2,2,5,5,5,5,5,16,16,16,16},
{6,6,6,6,6,6,6,16,16,16,16,16,5,2,2,2,5,2,2,2,2,2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,16,16,16,16},
{6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,16,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6}
},
waterLake = {
{6,6,6,6,6,6,6,6,14,6,14,6,14,6,6,14,6,14,6,14,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,6,12,6,6,6},
{6,6,6,6,6,6,6,6,6,14,6,14,6,6,6,6,6,6,6,14,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,12,1,12,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,14,6,14,6,6,6,6,6,6,6,6,6,6,6,6,12,12,1,12,12,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,12,12,1,12,12,12},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12,12,12,12,12,1,12,12,12},
{6,6,6,6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,16,16,16,16,12,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,16,16,16,16,16,16,12,12,12,12,10,10,10,10,12,12,12,10,12,10,10,10,10,4,16,16,16,16,6,6,6,6,6,6,6},
{6,6,6,6,16,16,16,10,10,10,10,12,12,12,10,10,10,4,4,10,10,12,12,12,10,10,12,10,4,4,4,10,4,16,16,16,16,6,6,6,6},
{6,6,6,16,16,16,16,4,10,10,10,12,10,10,10,4,4,4,4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,16,16,16,16,6,6,6},
{6,6,16,16,16,16,4,4,4,10,10,10,10,10,10,10,10,10,10,10,12,12,10,10,12,10,10,10,10,10,12,12,12,12,12,12,12,16,16,16,16},
{6,6,16,16,16,16,16,16,16,16,4,4,10,10,10,10,10,10,12,12,12,12,12,12,10,10,10,12,10,10,10,10,10,10,4,4,12,16,16,16,16},
{6,16,16,16,16,16,16,16,16,4,10,4,4,10,4,10,10,10,10,12,12,10,16,16,10,10,10,10,10,10,10,10,4,4,4,4,4,16,16,16,16},
{6,6,6,6,6,6,6,16,16,16,16,16,4,10,10,10,4,10,10,10,10,10,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,16,16,16,16},
{6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,16,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6},
{6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6}
}
}

cNColors = {4,2,1,13,5,15}
cNSymbols = {"\002","\031","\030","\017","\016","o"}
currentCNLevelNum = 1
currentCNLevel = {}
isNextCNLevel = false
lastCNLevelNum = 3
cNLevels = {
{
{0,0,0,0,5,5,5,0,0,0,0,0,0,0},
{0,3,0,0,0,0,0,0,0,5,5,0,0,0},
{0,3,0,0,0,0,0,0,0,0,0,0,0,2},
{0,0,0,0,0,0,1,0,0,0,0,0,0,0},
{3,0,0,0,0,0,0,0,0,0,0,0,2,0},
{0,0,0,4,4,0,0,0,0,0,0,0,2,0},
{0,0,0,0,0,0,0,4,4,4,0,0,0,6}
},
{
{0,0,0,0,0,0,0,0,2,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,6,0},
{0,4,4,4,0,5,5,5,0,0,0,0,0,0},
{0,1,1,0,0,0,3,0,0,0,0,0,0,0},
{0,0,0,0,0,2,3,0,0,0,0,0,0,0},
{0,0,0,0,0,2,3,0,0,0,0,0,0,0},
{0,0,0,0,0,2,3,0,0,0,0,0,0,0}
},
{
{0,0,0,2,4,4,2,4,4,0,0,0,0,0},
{0,0,0,2,0,3,1,3,0,0,0,0,0,0},
{0,0,0,0,0,4,4,3,0,0,0,0,0,0},
{0,0,5,0,4,4,0,3,0,0,4,4,0,0},
{0,0,0,2,5,5,5,3,3,0,0,0,0,0},
{0,0,0,2,0,0,0,0,3,0,6,0,0,0},
{0,0,0,2,0,0,2,0,0,0,0,0,0,0}
},
{
{0,0,0,0,0,0,0,0,0,0,2,5,5,5},
{0,0,0,0,0,0,0,0,0,0,2,3,3,1},
{0,0,0,0,0,0,0,0,0,0,2,4,4,4},
{0,5,5,5,5,0,0,2,0,0,5,0,4,6},
{0,0,4,4,4,3,4,0,4,4,4,4,2,0},
{0,0,0,5,5,3,0,0,0,5,5,5,0,0},
{0,0,0,0,0,0,0,3,0,0,0,0,2,0}
},
{
{0,0,2,0,0,2,0,0,2,0,0,0,0,0},
{0,0,2,5,5,5,0,0,0,4,0,0,0,0},
{6,5,2,0,0,0,0,0,4,0,0,1,1,1},
{0,5,0,0,0,0,0,0,0,0,0,1,1,1},
{0,0,0,0,2,0,0,0,0,0,0,1,1,1},
{0,0,0,3,0,0,0,0,0,0,0,0,0,0},
{0,0,0,4,4,0,0,0,0,0,0,0,0,0}
},
{
{5,5,5,5,5,3,0,0,3,2,0,0,0,2},
{0,0,3,0,0,3,0,0,3,0,2,0,2,0},
{0,0,3,1,0,3,0,0,3,6,2,0,2,0},
{0,0,3,0,0,0,5,5,0,0,0,5,0,0},
{0,0,3,0,0,3,0,0,3,0,3,0,3,0},
{0,0,3,0,0,3,0,0,3,0,3,0,3,0},
{0,0,3,0,0,3,0,0,3,3,0,0,0,3}
}
}

castleCharactersPixels = {
Witch = {
{12,14,11,12,12,1},
{14,11,11,11,12,12},
{11,11,11,11,11,12},
{14,5,5,16,14,12},
{14,5,5,5,14,13},
{14,12,12,12,14,13},
{14,12,12,5,5,5},
{14,12,12,12,14,14},
{14,5,5,5,14,14}
},
Zombie = {
{12,14,12,12,12,1},
{14,12,6,6,16,16},
{14,14,6,6,6,12},
{14,14,13,13,14,12},
{14,13,13,6,6,14},
{14,13,13,13,14,14},
{14,14,13,13,14,14},
{14,14,6,6,14,14},
{14,14,8,8,14,14}
},
Skeleton = {
{12,9,9,9,12,1},
{14,9,9,12,12,12},
{14,9,9,9,12,12},
{14,14,9,8,13,12},
{14,9,9,9,14,13},
{14,14,9,8,13,14},
{14,9,9,9,14,14},
{14,14,9,14,14,14},
{14,14,9,14,14,14}
},
Civilian = {
{12,14,13,13,12,1},
{14,13,13,16,12,12},
{14,14,5,5,12,12},
{14,14,4,4,14,12},
{14,14,4,4,14,14},
{14,14,4,4,14,14},
{14,14,12,12,14,14},
{14,14,12,12,14,14},
{14,14,8,8,14,14}
},
Devil = {
{12,14,16,12,12,1},
{14,12,15,16,12,12},
{14,14,15,15,12,12},
{14,14,16,16,14,12},
{14,14,16,16,14,14},
{14,14,16,16,14,14},
{14,14,8,8,14,14},
{14,14,8,8,14,14},
{14,14,16,16,14,14}
},
Guard = {
{12,14,12,12,12,8},
{14,12,8,8,12,8},
{14,14,8,8,12,16},
{14,14,16,16,14,16},
{14,14,16,16,16,16},
{14,14,16,16,14,16},
{14,14,8,8,14,16},
{14,14,8,8,14,16},
{14,14,8,8,14,16}
},
King = {
{12,5,12,5,12,5},
{14,2,5,6,5,3},
{14,14,16,2,16,12},
{14,14,2,2,2,12},
{14,14,14,2,14,14},
{14,7,7,7,7,7},
{14,7,7,7,7,7},
{14,14,8,8,8,14},
{14,14,8,14,8,14}
},
Error = {
{3,16,3,16,3,16},
{16,3,16,3,16,3},
{3,16,3,16,3,16},
{16,3,16,3,16,3},
{3,16,3,16,3,16},
{16,3,16,3,16,3},
{3,16,3,16,3,16},
{16,3,16,3,16,3},
{3,16,3,16,3,16}
},
Guitar = {
{12,14,13,13,12,1},
{14,9,13,13,9,12},
{14,9,13,13,9,12},
{14,14,13,13,14,12},
{14,14,13,13,14,14},
{14,13,8,8,13,14},
{14,13,8,8,13,14},
{14,16,13,13,16,14},
{14,16,14,14,16,14}
},
Sailor = {
{12,14,12,12,12,1},
{14,1,1,1,1,12},
{14,14,5,16,12,12},
{14,14,5,5,14,12},
{14,14,1,1,14,14},
{14,14,1,1,14,14},
{14,14,9,9,14,14},
{14,14,1,1,14,14},
{14,14,16,16,14,14}
},
Pirate = {
{12,14,16,16,1,1},
{14,16,16,16,16,12},
{14,14,5,16,12,12},
{14,14,5,13,14,12},
{14,5,15,13,14,14},
{14,9,15,15,14,14},
{14,9,15,15,14,14},
{14,14,12,12,14,14},
{14,14,12,12,14,14}
},
Fishborn = {
{12,8,8,8,12,1},
{14,8,10,16,12,12},
{14,14,10,10,12,12},
{14,16,8,8,14,12},
{14,9,8,10,14,14},
{14,9,9,9,14,14},
{14,9,8,8,14,14},
{14,14,8,8,14,14},
{14,14,9,9,14,14}
},
Cowboy = {
{12,14,13,13,1,1},
{14,13,13,13,13,12},
{14,14,5,16,12,1},
{14,14,5,5,8,2},
{14,14,13,12,14,14},
{14,14,13,12,14,14},
{14,14,13,13,14,14},
{14,14,2,2,14,14},
{14,14,16,16,14,14}
}
}

currentLocation = "worldMap"
locationPos = {
{x = 4, y = 15, locationName = "lighthouse"},
{x = 36, y = 9, locationName = "fishingHut"},
{x = 17, y = 9, locationName = "riddle"},
{x = 14, y = 7, locationName = "waterfall"},
{x = 3, y = 7, locationName = "alienOutside"},
{x = 30, y = 5, locationName = "castle"},
{x = 24, y = 7, locationName = "office"},
{x = 5, y = 9, locationName = "pizzeria"},
{x = 29, y = 18, locationName = "final"}

}
colorTable = {
colors.white,colors.orange,colors.magenta,colors.lightBlue,colors.yellow,colors.lime,colors.pink,colors.gray,colors.lightGray,colors.cyan,
colors.purple,colors.blue,colors.brown,colors.green,colors.red,colors.black}

player = {x = 10, y = 9}

locationVars = {
	insideLighthouse = {frog = true}
}

locationText = {
	lighthouse = "You feel a cold burst of wind as you walk closer to\nthe lighthouse.\n\nYou walk to the door and notice that it's open.\nWill you go in? (Yes/No)",
	insideLighthouse = {
		main = "You're in a three-floor lighthouse, no one seems to be here.\n\nThe bottom floor feels weird, you decided not to touch anything there.",
		frog = "\nOn the middle floor, you see a frog with an iconic-looking hat on a bed. {Take}",
		computer = "\nOn the top floor, you see an open laptop and the game \"Sad Mayor's Civil-Nations V\" loaded on it. {Play}"
	},
	civilNations = "--Sad Mayor's Civil-Nations V--\n\n(Move: wasd) (Reset: reset/r)\nGoal: \"Reach the goal (o)\"\n",
	fishingHut = "You feel a breeze of air movement as you walk closer to the fishing hut of the island.\nSome might say it's economically bad to only have one per island but the empire of Forgefactsion doesn't give half a damn. {Illegaly sell fish/Fish}\n\nYou also see a comically large fishing pole and a seriously big fish next to it, you decide not to touch it.",
	waterfall = "There's a \"Waterfall?Fatherwall. (American English)\" to the left of you and some phenomenal lookin' trees and nature and the left side of the screen to the right.\n\nThe beautiful sight inspires you to paint something. Will you put down a canvas while facing towards a completely different landscape? {Paint}\n\nA man walks outta da hill-hole. {Talk}",
	alienOutside = "You look up and see a UFO flying in the Earth's atmosphere, green as grass (like actually the exact same color). You can send a telepathic signal to it to fly down to you but, will you even understand what the aliens will say? It's a bad idea if you ask me.. Oh, you have a dictionary. Nevermind, you should totally do that. {Do that}",
	castle = "You walk to the all mighty castle of Forgefactsion wondering what you should even do inside as a guard looking man stops you and asks:\n\nGuard: Hello dear citiz... Wait, you aren't the king are you? *wink* What are you? [Guard] [\222\238\209\255]",
	office = "Someone walks into an office building who looks just like you and like... is you. You see some regular water coolers and some cooler water coolers, you go into a meeting room to ask someone which water is the coolest but before you can even make a sound a man stops you and says:\n\nDealing of The Art Man: Hi, you must be our next financial robot, we threw the previous one out of the window so we really need you here. [Yes I am the robot] [No, sorry] [No, ef you]",
	pizzeria = "As you walk into a mystical pizzeria, you feel like it's pizza time and it will be The Time of Pizza for a while.\nYou see a chef who looks like the main chef in your eyes <3 [Talk]\n\n(Pro tip: if you want to go to the right two tiles you can type \"dd\" instead of \"d\" twice)"
}

locationComplete = {false,false,false,false,false,false,false,false,false}
locationHints = {"A Computer at The Top Floor","Fishin' The Sea","The Wise Treasure","Painting The Trees","A Man in The Hole","Guard Duty","The Robots of The Future","Faster Food","Alienated Lands"}

function writeControls()
	text = "Inputs: "
	for i = 1, #controls, 1 do
		text = text .. "{" .. controls[i] .. "} "
	end
	text = text .. "\n"
	for i = 1, #controls2, 1 do
		text = text .. "{" .. controls2[i] .. "} "
	end
	print(text .. "\n---------------------------------------------------")
end

function drawMapInScreen()
	for i = 1, #worldMap, 1 do
		for j = 1, #worldMap[i], 1 do
			m.setTextColor(colorTable[worldMap[i][j][2]])
			m.setBackgroundColor(colorTable[worldMap[i][j][3]])
			m.setCursorPos(j,i)
			m.write(worldMap[i][j][1])
		end
	end
	
	m.setCursorPos(player["x"],player["y"])
	m.setTextColor(colorTable[1])
	m.setBackgroundColor(colorTable[worldMap[player["y"]][player["x"]][3]])
	m.write("\002")
end

function drawPic(name)
	for i = 1, #pics[name], 1 do
		for j = 1, #pics[name][i], 1 do
			if (pics[name][i][j] > 0) then
				m.setBackgroundColor(colorTable[pics[name][i][j]])
				m.setCursorPos(j,i)
				m.write(" ")
			end
		end
	end
end

function drawBox(x, y, w, h, text)
	for i = 0, h-1, 1 do
		for j = 0, w-1, 1 do
			m.setCursorPos(x + j,y + i)
			m.write(text)
		end
	end
end

function drawMapInConsole()
	for i = 1, 9, 1 do
		for j = 1, 9, 1 do
			if (j == 1 and i ~= 1) then
				print()
			end
			trueI = player["y"] + (i - 5)
			trueJ = player["x"] + (j - 5)
			didDraw = false
			if (trueI > 0 and trueI <= #worldMap) then
				if (trueJ > 0 and trueJ <= #worldMap[trueI]) then
					didDraw = true
					if (i == 5 and j == 5) then
						term.write("\002")
					else
						if (worldMap[trueI][trueJ][1] == "\000") then
							term.write("X")
						else
							term.write(worldMap[trueI][trueJ][1])
						end
					end
				end
			end
			if (not didDraw) then
				term.write(" ")
			end
		end
	end
	print("\n")
end

function moveFleet(x,y,fleetNum)
	players = {}
	doesPlayerMove = true
	for i = 1, #currentCNLevel, 1 do
		for j = 1, #currentCNLevel[i], 1 do
			if (currentCNLevel[i][j] == 1) then
				players[#players + 1] = {i,j}
				if (i + y >= 1 and i + y <= #currentCNLevel and j + x >= 1 and j + x <= #currentCNLevel[i]) then
					if (currentCNLevel[i + y][j + x] > 1 and currentCNLevel[i + y][j + x] < 6) then
						doesPlayerMove = false
					elseif (currentCNLevel[i + y][j + x] == 6) then
						isNextCNLevel = true
						doesPlayerMove = false
					end
				else
					doesPlayerMove = false
				end
			end
		end
	end
	if (doesPlayerMove) then
		for i = 1, #players, 1 do
			currentCNLevel[players[i][1]][players[i][2]] = 0
		end
		for i = 1, #players, 1 do
			currentCNLevel[players[i][1] + y][players[i][2] + x] = 1
		end
	end
	
	movings = {}
	for i = 1, #currentCNLevel, 1 do
		for j = 1, #currentCNLevel[i], 1 do
			if (currentCNLevel[i][j] == fleetNum) then
				if (i + y >= 1 and i + y <= #currentCNLevel and j + x >= 1 and j + x <= #currentCNLevel[i]) then
					if (currentCNLevel[i + y][j + x] == 0) then
						movings[#movings + 1] = {i,j}
					end
				end
			end
		end
	end
	for i = 1, #movings, 1 do
		currentCNLevel[movings[i][1] + y][movings[i][2] + x] = fleetNum
		isNext = true
		j = 0
		step = -1
		if (y < 0 or x < 0) then
			step = 1
		end
		isY = 1
		if (y == 0) then
			isY = 0
		end
		isX = 1 - isY
		while (isNext) do
			if (movings[i][1] + (j + step)*isY <= #currentCNLevel and movings[i][1] + (j + step)*isY >= 1 and
			movings[i][2] + (j + step)*isX <= #currentCNLevel[1] and movings[i][2] + (j + step)*isX >= 1) then
				if (currentCNLevel[movings[i][1] + (j + step)*isY][movings[i][2] + (j + step)*isX] == fleetNum) then
					j = j + step
			else
					currentCNLevel[movings[i][1] + j*isY][movings[i][2] + j*isX] = 0
					isNext = false
				end
			else
				currentCNLevel[movings[i][1] + j*isY][movings[i][2] + j*isX] = 0
				isNext = false
			end	
		end
	end
end

function finishLocation(text, itemName, itemDescription)
	textNextFrame["frame"] = 1
	textNextFrame["text"] = text
	inventory[#inventory + 1] = {itemName,itemDescription}
	currentLocation = "worldMap"
	input = ""
	inputOverride = true
end

function exitLocation(text)
	textNextFrame["frame"] = 1
	textNextFrame["text"] = text
	currentLocation = "worldMap"
	input = ""
	inputOverride = true
end

function smartWrite(text, x, y)
	startX = x
	startY = y
	xMinus = 0
	lineBreaks = 0
	for i = 1, #text, 1 do
		currentLetter = text:sub(i, i)
		if (currentLetter == "\n") then
			lineBreaks = lineBreaks + 1
			xMinus = i
			i = i + 2
		else
			m.setCursorPos(startX - xMinus + i,startY + lineBreaks)
			m.write(currentLetter)
		end
	end
end

writeControls()
drawMapInScreen()
drawMapInConsole()
isEntered = false

inputOverride = false
isEnterable = false

textNextFrame = {frame = -1, text = ""}

isPrevStop = false

fishPoints = 0
fishTable = {0,0}

riddleNum = 1
riddleQuestions = {
	"Starts with the letter F, often hops, ends in rog",
	"Hard to miss, waves like it's airing, popular language",
	"Hard to mist, heaves like it's broken, non-plural, endind",
	"Card two-king, at some tables it can get ten more",
	"Often red cloth, south yet chill E, guitar accessory noo",
	"Powerful card yet weak piece",
	"Sues a jeep (teal), hard to pan a man, hungry for spoon",
	"Ain't no grog or ale, better off searching"
}
riddleAnswers = {"frog","sea","wind","ace","cape","king","canal","joli rouge"}

chessPhase = 1
chessNoPhase = 1
chessNos = {"HELL NO", "Nuh-uh!", "Noooooooo", "N\007\007\007\008\007\008\007\008\008"}

alienDictionary = {{"-",""},{"?",""},{"ael",""},{"aeq",""},{"al",""},{"ao",""},{"aun",""},{"b",""},{"d",""},{"eqzoy",""},{"frzoy",""},{"ww","hello"}}
alienLocation = ""
isAlienGold = true
isLighthouseSecret = true

currentCastlePhase = -1
currentCastleCharacter = 1
isCastleYes = true
castleCharacters = {
{name = "Witch", text = "Well hello dear sir, I'm just passing\nthrough... the castle...", question = "\nLet her inside the castle? [Yes] [No]", yes = "yes" ,yesText = "YES! I KNEW IT WOULD WORK!!", no = "no", noText = "Watch your back with all your eyes.", isAny = false},
{name = "Zombie", text = "EEEEeeeeeh.", question = "\nLet it inside? [Yes] [Loot]", yes = "yes" ,yesText = "Eh.", no = "loot", noText = "(You've got some flesh, you could make a backpack\nout of it but you decide to\nthrow it out)", isAny = false},
{name = "Skeleton", text = "Doot.", question = "\nDoot? [Doot] [Doot]", yes = "doot" ,yesText = "(It doot)", no = "", noText = "", isAny = true},
{name = "Civilian", text = "Good morning. *Shows valid Id card*", question = "\nLet them civilize? [Yes] [DENIED]", yes = "yes" ,yesText = "*Goes inside*", no = "denied", noText = "Soon.", isAny = false},
{name = "Devil", text = "I've come to make three.", question = "\nLet him inside? [Devil yes] [Devil no]", yes = "devil yes" ,yesText = "Bad choice.", no = "devil no", noText = "Sabotage eh? I like it.", isAny = false},
{name = "Guard", text = "Hello partner.", question = "\nLet them in? [Yes] [No?]", yes = "yes" ,yesText = "Gooday'", no = "no?", noText = "*Invisibly facepalms* What do you mean\nwho do I call a partner? ...\nYou know what? No permission, no work.", isAny = false},
{name = "King", text = "(The king looks at you like you were\none big)", question = "\nLet THE in? [Um] [Ye?]", yes = "um" ,yesText = "(The king just walked inside without\nmuch care for your approval)", no = "ye?", noText = "", isAny = true},
{name = "Error", text = "[MISSING TEXT]", question = "\n[MISSING QUESTION] [MISSING YES] [MISSING ]", yes = "missing yes" ,yesText = "[MISSING TEXT]", no = "missing ", noText = "", isAny = true},
{name = "Guitar", text = "(You see a guitar or so you interfret,\nwill you let it hammer on?)", question = "\nLet itin? [Pick] [Break]", yes = "pick" ,yesText = "(You have picked on the guitar and it\ngave you the signature \"The Looks\")", no = "break", noText = "(You broke your neck and died but then\ngot resurrected by some old dude)", isAny = false},
{name = "Sailor", text = "Mornin', I've come to see the king\nto make a.. request.", question = "\nLedemin? [Ye] [No can do]", yes = "ye" ,yesText = "Thank ya, sir! Also, watch out\nfor pirates.", no = "no can do", noText = "Damn yourself, I wish you a pirateful\nevening. (It's mid-day)", isAny = false},
{name = "Pirate", text = "Mornin' or whatever, I for one a sailor\nof them seas and oceans of water.\nArr... I mean, Narr.", question = "\nLem? [Hell Yeaah] [Narr]", yes = "hell yeaah" ,yesText = "Damn straight!", no = "narr", noText = "Arr, no one chooses the Wah.", isAny = false},
{name = "Fishborn", text = "(You see the Fishborn and you really\nwant to say something to them)", question = "\n[1] I was never such an adventurer like you.\n[2] Respect the law, and you disrespect me.\n[3] Let me guess... someone gave you a roll-sweet.\n[4] If those Fracfrog guards can take down a fish, so can we.\n[5] My cousin's out guarding, and what do I get? Gardening.", yes = "" ,yesText = "(The Fishborn puts a bucket on your\nhead and you hear civilians screaming and\nfire being cast, you do nothing.)", no = "", noText = "", isAny = true},
{name = "Cowboy", text = "Stickful o' howdies.", question = "\nl? yes:[no] no:[yes]", yes = "no" ,yesText = "You have died! (+1 Anger)", no = "yes", noText = "", isAny = true},
}

officePhase = 0
officeFailText = ""

pizzaNum = 0
isPizza = false
isPizzable = false

pizzaPos = {
{x = 4, y = 15, text = "address: where nations civilize"},
{x = 36, y = 9, text = "address: where fish are bigger than sharks"},
{x = 14, y = 7, text = "address: where men know their clouds"},
{x = 24, y = 7, text = "address: blooming dreams, struggling company"},
{x = 30, y = 5, text = "address: where fish born and go to"},
{x = 3, y = 7, text = "address: where grass flies"},
{x = 5, y = 9, text = "address: where here"}
}

isLavaRemoved = false

while (run) do
	if (not inputOverride) then
		input = read()
		input = string.lower(input)
	end
	inputOverride = false
	if (input == "stop") then
		isPrevStop = true
		print("\n\nAre you sure you want to quit? It will remove all your progress\n\nYes: [Yes I do want to DELETE all the progression I have made this playthrough 1211]\nNo: (Type anything else)")
	elseif (isPrevStop) then
		if (input == "yes i do want to delete all the progression i have made this playthrough 1211" or input == "yeslol") then
			print("\nThanks for playing!")
			if (input ~= "yeslol") then
				print("(Also you could've typed \"yeslol\" to quit)")
			end
			run = false
		else
			isPrevStop = false
			input = ""
			inputOverride = true
		end
	else
		isPrevStop = false
		term.clear()
		if (currentLocation ~= "picross") then
			writeControls()
		end
		m.clear() m.setCursorPos(1,1)
		
		isMap = true
		if (input == "inventory" or input == "inv") then
			m.setBackgroundColor(colorTable[16])
			m.setTextColor(colorTable[1])
			m.clear()
			isMap = false
			for i = 1, #inventory, 1 do
				m.setCursorPos(2,i + 1)
				print(i .. ": " .. inventory[i][1] .. ", " .. inventory[i][2])
				m.write(i .. ": " .. inventory[i][1] .. ", " .. inventory[i][2])
			end
			if (isPizza and pizzaNum >= 1 and pizzaNum <= #pizzaPos) then
				m.setCursorPos(2,#inventory + 3)
				print("\nCurrent Pizza: round pizza, " .. pizzaPos[pizzaNum]["text"])
				m.write("\nCurrent Pizza: round pizza, " .. pizzaPos[pizzaNum]["text"])
			end
			
			m.setCursorPos(2,19)
			m.write("Awaiting input...")
			print("\nType any key to continue...")
		else
			if (textNextFrame["frame"] > -1) then
				textNextFrame["frame"] = textNextFrame["frame"] - 1
			end
			
			
			if (currentLocation == "worldMap") then
				for i = 1, #locationPos, 1 do
					if (locationPos[i]["x"] == player["x"] and locationPos[i]["y"] == player["y"]) then
						isEnterable = true
						if (input == "enter" or input == "e") then
							currentLocation = locationPos[i]["locationName"]
						end
					end
				end
				if (isPizza and pizzaNum >= 1 and pizzaNum <= #pizzaPos) then
					if (pizzaPos[pizzaNum]["x"] == player["x"] and pizzaPos[pizzaNum]["y"] == player["y"]) then
						isPizzable = true
						if (input == "pizza") then
							isPizza = false
							input = ""
							inputOverride = true
						end
					end
				end
			else
				if ((input == "leave" or input == "l") and currentLocation ~= "chess") then
					isEnterable = true
					currentLocation = "worldMap"
				end
			end
			
			if (currentLocation == "worldMap") then
				key = input:sub(1, 1)
				if (key == "w" or key == "a" or key == "s" or key == "d") then
					for i = 1, #input, 1 do
						key = input:sub(i, i)
						x = 0
						y = 0
						if (key == "w") then
							y = -1
						end
						if (key == "s") then
							y = 1
						end
						if (key == "a") then
							x = -1
						end
						if (key == "d") then
							x = 1
						end
						if (player["y"] + y > 0 and player["y"] + y <= #worldMap) then
							if (player["x"] + x > 0 and player["x"] + x <= #worldMap[player["y"]]) then
								if (worldMap[player["y"] + y][player["x"] + x][1] ~= "\000") then
									if (not (player["x"] + x >= 31 and player["x"] + x <= 33 and player["y"] + y >= 4 and player["y"] + y <= 6)) then
										player["x"] = player["x"] + x
										player["y"] = player["y"] + y
									end
								end
							end
						end
					end
					input = ""
					inputOverride = true
				end
				
				drawMapInScreen()
				
				if (isMap) then
					drawMapInConsole()
					if (isEnterable) then
						print("Enter {enter/e} to enter.")
						isEnterable = false
					end
					if (isPizzable) then
						print("Pizza {pizza} to deliver pizza.")
						isPizzable = false
					end
				end
			elseif (currentLocation == "lighthouse") then
				drawPic("lighthouse")
				print(locationText["lighthouse"])
				
				if (input == "yes" or input == "y") then
					currentLocation = "insideLighthouse"
					input = ""
					inputOverride = true
				elseif (input == "no" or input == "n") then
					exitLocation("\nEmpathy Bot: Good choice not trespassing on someone's property. You gain 0 points!")
				end
				
				
				if ((input == "ww ao" or input == "hello ao" or input == "hello lighthouse") and isLighthouseSecret) then
					isLighthouseSecret = false
					inventory[#inventory + 1] = {"emerald statue","looks pretty important"}
					print("\nYou feel an extreme wind coming from behind you as The Portal of Chaos opens up to the Galactic Nexus. You try to run but before you can lift a foot you get hit by a small emerald statue glowing in red. You look back at the portal but you don't find anything as it has already closed itself. You gain two-fifths of a point!")
					locationComplete[9] = true
				end
			elseif (currentLocation == "insideLighthouse") then
				drawPic("insideLighthouse")
				print(locationText["insideLighthouse"]["main"])
				if (locationVars["insideLighthouse"]["frog"]) then
					print(locationText["insideLighthouse"]["frog"])
					if (input == "take") then
						locationVars["insideLighthouse"]["frog"] = false
						inventory[#inventory + 1] = {"Hop the Frog","cool"}
						pics["insideLighthouse"][15][22] = 1
						pics["insideLighthouse"][15][23] = 1
						pics["insideLighthouse"][14][22] = 1
						pics["insideLighthouse"][14][23] = 1
						pics["insideLighthouse"][13][22] = 1
						input = ""
						inputOverride = true
					end
				end
				print(locationText["insideLighthouse"]["computer"])
				if (input == "play") then
					currentLocation = "civilNations"
					input = "reset"
					inputOverride = true
				end
				if ((input == "ww ao" or input == "hello ao" or input == "hello lighthouse") and isLighthouseSecret) then
					print("Gooo outsideeEEe -Random Voice")
				end
			elseif (currentLocation == "civilNations") then
				print()
				m.setBackgroundColor(colorTable[12])
				m.clear()
				drawPic("grid")
				if (currentCNLevelNum <= #cNLevels) then
					if (input == "reset" or input == "r") then
						currentCNLevel = {}
						for i = 1, #cNLevels[currentCNLevelNum], 1 do
							currentCNLevel[i] = {}
							for j = 1, #cNLevels[currentCNLevelNum][i], 1 do
								currentCNLevel[i][j] = cNLevels[currentCNLevelNum][i][j]
							end
						end
					end
					
					key = input:sub(1, 1)
					if (key == "w" or key == "a" or key == "s" or key == "d") then
						for i = 1, #input, 1 do
							key = input:sub(i, i)
							if (key == "w") then
								moveFleet(0,-1,3)
							end
							if (key == "s") then
								moveFleet(0,1,2)
							end
							if (key == "a") then
								moveFleet(-1,0,4)
							end
							if (key == "d") then
								moveFleet(1,0,5)
							end
						end
						if (isNextCNLevel) then
							isNextCNLevel = false
							if (currentCNLevelNum == #cNLevels) then
								finishLocation("\nYou've won the Civil-Nations! (+1 coin)","+1 coin","fake")
								locationComplete[1] = true
								currentCNLevelNum = 1
							else
								currentCNLevelNum = currentCNLevelNum + 1
								input = "reset"
								inputOverride = true
							end
						end
					end
					print(locationText["civilNations"])
					for i = 1, #currentCNLevel, 1 do
						for j = 1, #currentCNLevel[i], 1 do
							tile = currentCNLevel[i][j]
							if (tile > 0) then
								m.setBackgroundColor(colorTable[cNColors[tile]])
								m.setTextColor(colorTable[16])
								drawBox((j-1)*3+1,(i-1)*3+1,2,2,cNSymbols[tile])
								if (tile < 4 and i > 1) then
									if (tile == currentCNLevel[i - 1][j]) then
										drawBox((j-1)*3+1,(i-1)*3,2,1,cNSymbols[tile])
									end
								end
								if ((tile == 1 or tile > 3) and j > 1) then
									if (tile == currentCNLevel[i][j - 1]) then
										drawBox((j-1)*3,(i-1)*3+1,1,2,cNSymbols[tile])
									end
								end
								term.write(cNSymbols[tile])
							else
								term.write(" ")
							end
						end
						print()
					end
				end
			elseif (currentLocation == "fishingHut") then
				drawPic("fishingHut")
				print(locationText["fishingHut"])
				if (input == "illegaly sell fish" or input == "fish") then
					currentLocation = "fishIdle"
					input = ""
					inputOverride = true
				end
			elseif (currentLocation == "fishIdle") then
				if (input == "steal") then
					fishPoints = fishPoints + 1
				end
				if (input == "hire" and fishPoints >= 5) then
					fishPoints = fishPoints - 5
					fishTable[1] = fishTable[1] + 1
				end
				if (input == "imwbtcffy" and fishPoints >= 100) then
					fishPoints = fishPoints - 100
					fishTable[2] = fishTable[2] + 1
				end
				isCaught = false
				if (input == "pay cops to print fish for you" and fishPoints >= 3000) then
					fishPoints = 0
					fishTable = {0,0}
					isCaught = true
				end
				if (input == "\023\014\155\195\127\160\002\241" and fishPoints >= 10000) then
					fishPoints = fishPoints - 10000
					inventory[#inventory + 1] = {"paper","it reads: \"Well Played. -SovertheEmily\""}
				end
				
				if (input == "sleep") then
					fishPoints = fishPoints + fishTable[1]*2 + fishTable[2]*50
				end
				
				print("Fish: " .. fishPoints)
				print("---------------------------------------------------")
				print("Steal Fish {Steal} (+1 Fish)\n")
				print("Hire Professional Fish-Stealer {Hire} (Costs: 5 Fish, +2 Fish/Day)\n")
				print("Illegaly Modify Whale Brains To Catch Fish For You {IMWBTCFFY} (Costs: 100 Fish, +50 Fish/Day)\n")
				print("Pay Cops To Print Fish For You {Pay Cops To Print Fish For You} (Costs: 3000 Fish, +1000 Fish/Day)\n")
				print("Sleep in someone's bed {Sleep} (+Day)")
				print("Win {\023\014\155\195\127\160\002\241} (Costs: 10000 Fish)")
				
				if (math.random(1,100) > 1) then
					drawPic("fishIdle")
				else
					drawPic("fishIdleSecret")
				end
				m.setTextColor(colorTable[1])
				m.setBackgroundColor(colorTable[16])
				m.setCursorPos(2,2)
				m.write("Fish: " .. fishPoints)
				m.setCursorPos(2,3)
				m.write("Men: " .. fishTable[1])
				m.setCursorPos(2,4)
				m.write("Whales: " .. fishTable[2])
				m.setCursorPos(2,5)
				m.write("Cops: " .. 0)
				
				m.setCursorPos(1,20)
				m.write(input)
				
				
				if (isCaught) then
					isCaught = false
					finishLocation("\nThe police somehow found out about your illegal operations and took every fish related things from you. Unlucky.","parking ticket","for stealing fish")	
					locationComplete[2] = true
				end
			elseif (currentLocation == "riddle") then
				drawPic("riddle")
				print("A big X started moving and the wave frequencies created by such movement sounds as if it was saying:\n")
				if (riddleNum <= #riddleQuestions) then
					print(riddleQuestions[riddleNum] .. ". What is it?")
					if (input == riddleAnswers[riddleNum]) then
						riddleNum = riddleNum + 1
						input = "this is an answer but not the correct one"
						inputOverride = true
					end
				elseif (riddleNum - 1 == #riddleQuestions) then
					print("Hard to duck, easy to duck, medium to deck. What is it?")
					if (input ~= "this is an answer but not the correct one") then
						riddleNum = 1
						finishLocation("\nThe giant X from the ground gave you a treasure box, wonder what could open it?","treasure box","openable?")
						locationComplete[3] = true
					end
				end
			elseif (currentLocation == "waterfall") then
				print(locationText["waterfall"])
				drawPic("beniswotafoll")
				
				if (input == "paint") then
					currentLocation = "picross"
					input = ""
					inputOverride = true
				elseif (input == "talk") then
					currentLocation = "chess"
					input = ""
					inputOverride = true
				end
				
			elseif (currentLocation == "picross") then
				term.clear()
				print("Click anywhere to continue...")

				currentPicross = 0
				isNextPicrossLevel = true
				picrossNums = {
					{
						{{1}},
						{{1}},
						4
					},
					{
						{{1},{1},{1},{1},{1}},
						{{5}},
						12
					},
					{
						{{1},{1},{0},{1},{1}},
						{{2,2}},
						7
					},
					{
						{{1},{0},{1},{1},{1}},
						{{1,3}},
						2
					},
					{
						{{1},{1},{1},{1},{1}},
						{{5},{0},{0},{0},{0}},
						10
					},
					{
						{{1,1},{5},{1,1},{5},{1,1}},
						{{1,1},{5},{1,1},{5},{1,1}},
						8
					},
					{
						{{1,1,1},{3},{5},{3},{1,1,1}},
						{{1,1,1},{3},{5},{3},{1,1,1}},
						5
					},
					{
						{{5},{2,1,2},{4,1},{2,1,2},{5}},
						{{3},{5},{1,1,1},{5},{1,1},{2,2},{3}},
						15
					},
					{
						{{10},{1,1},{1,1},{1,1},{1,1},{1,1},{1,1},{1,1},{1,1},{10}},
						{{10},{1,1},{1,1},{1,1},{1,1},{1,1},{1,1},{1,1},{1,1},{10}},
						13
					},
					{
						{{10},{1,4,1},{1,6,1},{3,4},{4,3},{4,3},{3,4},{1,6,1},{1,4,1},{10}},
						{{10},{1,4,1},{1,6,1},{3,2,3},{3,3},{3,3},{4,4},{1,6,1},{1,4,1},{10}},
						3
					},
					{
						{{10},{4,4},{3,2,2},{3,2,1},{1,1,2,2},{1,2,1},{1,2,2},{1,4},{1,8},{10}},
						{{5,2},{4,2,1},{5,2},{2,3},{1,5,2},{1,5,2},{2,3},{3,1,4},{3,1,4},{2,1,1,3}},
						16
					},
					{
						{{10},{1,1,1},{10},{1,1,1},{1,1,1,1},{1,1,1,1},{1,1,1},{10},{1,1,1},{10}},
						{{1,1,2,1,1,},{3,3},{1,2,2,1},{1,1,2,1,1,},{3,3},{1,2,2,1},{1,1,2,1,1},{3,3},{1,2,2,1},{1,1,2,1,1}},
						9
					},
					{
						{{5},{3,1},{2},{1,2},{2,2},{3,2,2},{7,1},{5,2,1},{3,2,1},{2,2}},
						{{1,4},{2,6},{2,7},{2,2},{1,5},{2,2},{2},{2},{4},{7}},
						6
					},
					{
						{{1,5},{1,1,1},{3,1},{8},{1,1},{8},{1,1},{8},{1,1},{8}},
						{{2,1,1,1},{2,1,1,1},{2,1,1,1},{2,1,1,1},{1,1,1,1,1},{1,1,1,1,1},{1,1,1,1,1,},{1,1,1,1,1},{1,1,1,1,1},{3,1,1,1}},
						11
					},
				}
				currentPicrossMap = {}
				clickedPicrossTile = 0
				mouseOverride = false
				id,mouseButton,x,y = 0
				while (currentLocation == "picross") do
					if (isNextPicrossLevel) then
						isNextPicrossLevel = false
						if (currentPicross < #picrossNums) then
							currentPicross = currentPicross + 1
							currentPicrossMap = {}
							for i = 1, #picrossNums[currentPicross][2], 1 do
								currentPicrossMap[i] = {}
								for j = 1, #picrossNums[currentPicross][1], 1 do
									currentPicrossMap[i][j] = 0
								end
							end
						else
							finishLocation("\nCongratulations! You have finished the Ultimate Picrosser 2000! You've gained 3 Rupees!","3 rupees","not a currency")
							locationComplete[4] = true
						end
					end
					if (not mouseOverride) then
						id,mouseButton,x,y = os.pullEvent()
					else
						mouseOverride = false
					end
					m.clear()
					if (id == "mouse_click" or id == "mouse_drag") then
						if (id == "mouse_click" and x < 4 and y == 1) then
							currentLocation = "worldMap"
							input = ""
							inputOverride = true
						end
						if (x-6 >= 1 and x-6 <= #picrossNums[currentPicross][1] and y-7 >= 1 and y-7 <= #picrossNums[currentPicross][2]) then
							if (id == "mouse_click") then
								clickedPicrossTile = currentPicrossMap[y-7][x-6]
							end
							if (currentPicrossMap[y-7][x-6] == clickedPicrossTile) then
								if (mouseButton == 1) then
									if (clickedPicrossTile == 0) then
										currentPicrossMap[y-7][x-6] = 1
									elseif (clickedPicrossTile == 1) then
										currentPicrossMap[y-7][x-6] = 0
									end
								else
									if (clickedPicrossTile == 0) then
										currentPicrossMap[y-7][x-6] = 2
									elseif (clickedPicrossTile == 2) then
										currentPicrossMap[y-7][x-6] = 0
									end
								end
							end
						end
						
						nums = {{},{}}
						for j = 1, #currentPicrossMap[1], 1 do
							nums[1][j] = {}
							lastNum = 0
							for i = 1, #currentPicrossMap, 1 do
								num = currentPicrossMap[i][j]
								if (num == 1) then
									if (lastNum == 0) then
										nums[1][j][#nums[1][j] + 1] = 1
									else
										nums[1][j][#nums[1][j]] = nums[1][j][#nums[1][j]] + 1
									end
									lastNum = 1
								else
									lastNum = 0
								end
							end
							if (#nums[1][j] == 0) then
								nums[1][j] = {0}
							end
						end
						for i = 1, #currentPicrossMap, 1 do
							nums[2][i] = {}
							lastNum = 0
							for j = 1, #currentPicrossMap[i], 1 do
								num = currentPicrossMap[i][j]
								if (num == 1) then
									if (lastNum == 0) then
										nums[2][i][#nums[2][i] + 1] = 1
									else
										nums[2][i][#nums[2][i]] = nums[2][i][#nums[2][i]] + 1
									end
									lastNum = 1
								else
									lastNum = 0
								end
							end
							if (#nums[2][i] == 0) then
								nums[2][i] = {0}
							end
						end
						
						
						isCorrect = true
						for i = 1, #picrossNums[currentPicross][1], 1 do
							for j = 1, #picrossNums[currentPicross][1][i], 1 do
								if (#nums[1][i] >= j) then
									if (picrossNums[currentPicross][1][i][j] ~= nums[1][i][j]) then
										isCorrect = false
									end
								else
									isCorrect = false
								end
							end
						end
						for i = 1, #picrossNums[currentPicross][2], 1 do
							for j = 1, #picrossNums[currentPicross][2][i], 1 do
								if (#nums[2][i] >= j) then
									if (picrossNums[currentPicross][2][i][j] ~= nums[2][i][j]) then
										isCorrect = false
									end
								else
									isCorrect = false
								end
							end
						end
						
						
						term.clear()
						
						text = "[X] Exit    Picross - {LMB = Color} {RMB = X}\n"
						for k = 1, 5, 1 do
							text = text .. "      "
							for j = 1, #picrossNums[currentPicross][1], 1 do
								if (6-k <= #picrossNums[currentPicross][1][j]) then
									num = picrossNums[currentPicross][1][j][k-(5-#picrossNums[currentPicross][1][j])]
									if (num == 10) then
										num = "a"
									end
									text = text .. num
								else
									text = text .. " "
								end
							end
							text = text .. "\n"
						end
						text = text .. "\n"
						for i = 1, #picrossNums[currentPicross][2], 1 do
							for k = 1, (5+#picrossNums[currentPicross][1]), 1 do
								if (k < 6) then
									if (6-k <= #picrossNums[currentPicross][2][i]) then
										num = picrossNums[currentPicross][2][i][k-(5-#picrossNums[currentPicross][2][i])]
										if (num == 10) then
											num = "a"
										end
										text = text .. num
									else
										text = text .. " "
									end
								else
									if (k == 6) then
										text = text .. " "
									end
									mapText = currentPicrossMap[i][k-5]
									if (mapText == 0) then
										mapText = "-"
									elseif (mapText == 1) then
										mapText = "O"
									else
										mapText = "\127"
									end
									text = text .. mapText
								end
							end
							if (i ~= #picrossNums[currentPicross][2]) then
								text = text .. "\n"
							end
						end
						print(text)
						for i = 1, 10-#currentPicrossMap, 1 do
							print()
						end
						
						if (isCorrect) then
							print("Finished! [Next]")
							if (x > 10 and x < 17 and y == 18) then
								isNextPicrossLevel = true
								mouseOverride = true
							end
						else
							print()
						end
					end
					
					drawPic("picrossBackground")
					for i = 1, #currentPicrossMap, 1 do
						for j = 1, #currentPicrossMap[i], 1 do
							m.setTextColor(colorTable[16])
							if (currentPicrossMap[i][j] == 1) then
								m.setBackgroundColor(colorTable[picrossNums[currentPicross][3]])
							else
								m.setBackgroundColor(colorTable[1])
							end
							drawBox((j-1)*2+1+math.ceil((41-(#currentPicrossMap[i]*2))/2),(i-1)*2+1+math.floor((10-#currentPicrossMap)/2)*2,2,2," ")
						end
					end
					m.setBackgroundColor(colorTable[1])
				end
			elseif (currentLocation == "chess") then
				drawPic("chess")
				if (chessPhase == 1) then
					if (input == "yes" or input == "y") then
						chessPhase = 2
						input = "wrong move but elseeee234"
						inputOverride = true
					end
				
					if (input == string.lower(chessNos[chessNoPhase]) and chessNoPhase < 4) then
						chessNoPhase = chessNoPhase + 1
					end
					text = "Oh hi there young man, hope you're bored. D"
					if (chessNoPhase > 1) then
						text = "I didn't hear you, d"
					end
					print(text .. "o you wanna play chess?\n{Yes} {" .. chessNos[chessNoPhase] .. "}")
				elseif (chessPhase == 2) then
					print("Okay, I'll start: e4")
					
					letter1 = input:sub(1, 1)
					letter2 = input:sub(2, 2)
					letter3 = input:sub(3, 3)
					num = string.byte(letter1)
					if (letter1 == "n" and letter3 == "6" and (letter2 == "a" or letter2 == "c" or letter2 == "f" or letter2 == "h")) then
						chessPhase = 3
						input = "wrong move but elseeee2342"
						inputOverride = true
					elseif ((letter2 == "5" or letter2 == "6") and #input > 1) then
						if(num >= 97 and num <= 104) then
							chessPhase = 3
							input = "wrong move but elseeee2342"
							inputOverride = true
						else
							print("\nThere's no such move like " .. input .. ". Stickbird suggestions:\n1. c5\n2. e6\n3. c6")
						end
					else
						if (input ~= "wrong move but elseeee234") then
							print("\nThere's no such move like " .. input .. ". Stickbird suggestions:\n1. c5\n2. e6\n3. c6")
						end
					end
				elseif (chessPhase == 3) then
					print("Bold move. Okay my next move would be: ke7")
					if (input ~= "wrong move but elseeee2342") then
						finishLocation("\nYou lose. You can't do anything against the Bongcloud so the engine resigned for you. Congratulations, you have leveled up in suckin'!","grandmaster certificate","~4u")
						locationComplete[5] = true
					end
				end
				
				if ((input == "leave" or input == "l")) then
					print("There's no leaving this")
				end
			elseif (currentLocation == "alienOutside") then
				drawPic("alienOutside")
				print(locationText["alienOutside"])
				if (input == "do that") then
					currentLocation = "alien"
					input = ""
					inputOverride = true
				end
			elseif (currentLocation == "alien") then
				drawPic("alien")
				if (alienLocation == "dictionary") then
					words = {}
					for word in input:gmatch("%S+") do table.insert(words, word) end
					if (#words > 1) then
						for i = 1, #alienDictionary, 1 do
							if (alienDictionary[i][1] == words[1]) then
								alienDictionary[i][2] = words[2]
							end
						end
					end
					for i = 1, #alienDictionary, 1 do
						print(alienDictionary[i][1] .. ": \"" .. alienDictionary[i][2] .. "\"")
					end
					print("\nUsage: (word (space) meaning). Examble: ? question")
					print("{Talk}")
					if (input == "talk") then
						alienLocation = ""
						input = ""
						inputOverride = true
					end
				else
					alienTextNum = {}
					hasWord = {false,false,false,false,false,false,false,false,false,false,false,false}
					isFrzoy = false
					isAo = false
					isEqzoy = false
					for i in input:gmatch("%S+") do
						for j = 1, #alienDictionary, 1 do
							if (alienDictionary[j][1] == i) then
								hasWord[j] = true
							end
						end
					end
					
					if (hasWord[7] or hasWord[8]) then
						alienTextNum = {9,7}
					end
					if (hasWord[3] or hasWord[9]) then
						alienTextNum = {8,3}
					end
					if (hasWord[1] or hasWord[5]) then
						alienTextNum = {9,1,5}
					end
					if (hasWord[9] and (hasWord[1] or hasWord[5])) then
						alienTextNum = {8,1,3,5}
					end
					if (hasWord[10]) then
						alienTextNum = {2,9,10,8,2}
					end
					if (hasWord[4]) then
						alienTextNum = {9,10,4,2}
					end
					if (hasWord[12]) then
						alienTextNum = {12,7}
					end
					
					if (hasWord[11]) then
						isFrzoy = true
					end
					if (hasWord[6]) then
						isAo = true
					end
					if (hasWord[10] and hasWord[4] and isAlienGold) then
						isEqzoy = true
					end
					
					if (#alienTextNum == 0) then
						alienTextNum = {2}
					end
					
					text = {"","(translation:"}
					if (isEqzoy) then
						text = {"(The alien took your golden coin and gave you a paper in exchange (see inventory))",""};
						isAlienGold = false
						inventory[#inventory + 1] = {"alien paper","it reads \"frzoy ww ao - ao\""}
					elseif (isFrzoy) then
						text[1] = "d frzoy \"" .. input .. "\" "
						words = {alienDictionary[9][2],alienDictionary[11][2]}
						if (words[1] == "") then words[1] = "\"\"" end
						if (words[2] == "") then words[2] = "\"\"" end
						
						text[2] = text[2] .. " " .. words[1] .. " " .. words[2] .. " \"" .. input .. "\""
					elseif (isAo) then
						text = {"(The alien shows you a symbol that looks like this: \194)",""};
					else
						for i = 1, #alienTextNum, 1 do
							text[1] = text[1] .. alienDictionary[alienTextNum[i]][1] .. " "
							if (alienDictionary[alienTextNum[i]][2] == "") then
								text[2] = text[2] .. " \"\""
							else
								text[2] = text[2] .. " " .. alienDictionary[alienTextNum[i]][2]
							end
						end
					end
					text[2] = text[2] .. ")"
					if (isAlienGold) then
						print("(You have a golden coin and you want to exchange it with the alien.)\n")
					end
					print("You: " .. input)
					
					m.setCursorPos(2,3)
					m.setBackgroundColor(colorTable[16])
					m.setTextColor(colorTable[1])
					m.write("You: " .. input)
					if (text[2] ~= "") then
						print("Alien: " .. text[1] .. "\n" .. text[2])
						m.setCursorPos(2,17)
						m.write("Alien: " .. text[1])
						m.setCursorPos(2,19)
						m.write(text[2])
					else
						print(text[1])
					end
					print("\nRead/Modify the alien community dictionary: {Read}")
					if (input == "read") then
						alienLocation = "dictionary"
						input = ""
						inputOverride = true
					end
				end
			elseif (currentLocation == "castle") then
				m.setBackgroundColor(colorTable[16])
				m.setTextColor(colorTable[1])
				
				chara = castleCharacters[currentCastleCharacter]
				if (currentCastlePhase == -1) then
					drawPic("guardQuestion")
					print(locationText["castle"])
					if (input == "guard") then
						currentCastlePhase = 0
						input = ""
						inputOverride = true
					end
				elseif (currentCastlePhase == 0) then
					drawPic("guardFacepalm")
					print("Waait rrreeaallllyy? Oookkkkaaaaaaayyyyyyyyy................\n*visibly facepalms*\n\n[Next]")
					if (input == "next") then
						currentCastleCharacter = 1
						currentCastlePhase = 1
						input = ""
						inputOverride = true
					end
				elseif (currentCastlePhase == 1) then
					drawPic("castle")
					
					isNext = false
					if (chara["name"] == "Fishborn") then
						num = tonumber(input)
						if (num ~= nil) then
							if (num >= 1 and num <= 5) then
								isCastleYes = true
								isNext = true
							end
						end
						smartWrite(chara["name"],3,8)
						smartWrite(chara["text"],1,9)
						print(chara["name"] .. ": " .. chara["text"])
						print(chara["question"])
					elseif (chara["isAny"]) then
						if (input == chara["yes"] or input == chara["no"]) then
							isCastleYes = true
							isNext = true
						else
							smartWrite(chara["name"],3,8)
							smartWrite(chara["text"],1,9)
							print(chara["name"] .. ": " .. chara["text"])
							print(chara["question"])
						end
					else
						if (input == chara["yes"]) then
							isCastleYes = true
							isNext = true
						elseif (input == chara["no"]) then
							isCastleYes = false
							isNext = true
						else
							smartWrite(chara["name"],3,8)
							smartWrite(chara["text"],1,9)
							print(chara["name"] .. ": " .. chara["text"])
							print(chara["question"])
						end
					end
					if (isNext) then
						currentCastlePhase = 2
						input = ""
						inputOverride = true
					end
					
					name = chara["name"]
					for i = 1, #castleCharactersPixels[name], 1 do
						for j = 1, #castleCharactersPixels[name][i], 1 do
							m.setCursorPos(j + 3,i + 11)
							m.setBackgroundColor(colorTable[castleCharactersPixels[name][i][j]])
							m.write(" ")
						end
					end
				else
					drawPic("castle")
					if (isCastleYes) then
						smartWrite(chara["yesText"],2,18)
						print(chara["yesText"])
					else
						smartWrite(chara["noText"],2,18)
						print(chara["noText"])
					end
					print("\n[Next]")
					if (input == "next") then
						if (currentCastleCharacter < #castleCharacters) then
							currentCastleCharacter = currentCastleCharacter + 1
							currentCastlePhase = 1
							input = "aaaaa"
							inputOverride = true
						else
							currentCastlePhase = -1
							finishLocation("\nYou have finished your midnight shift at the castle, you've received your pay.","guard's wage","it's never high")
							locationComplete[6] = true
						end
					end
				end
			elseif (currentLocation == "office") then
				drawPic("office")
				if (officePhase == 0) then
					print(locationText["office"])
					if (input == "yes i am the robot") then
						officePhase = 1
						input = ""
						inputOverride = true
					elseif (input == "no, sorry") then
						exitLocation("\nDoTAM: Oh then I'll take you out to leave.")
					elseif (input == "no, ef you") then
						exitLocation("\nDoTAM: D: How dare.")
					end
				elseif (officePhase == 1) then
					print("We have a giant ruby which usually costs 400, how much should we sell it for?")
					num = tonumber(input)
					if (num ~= nil) then
						if (num <= 400) then
							officePhase = 2
							input = ""
							inputOverride = true
						else
							officePhase = -1
							officeFailText = "DoTAM: Oh wow, we have won capitalism, thanks for your help."
							input = ""
							inputOverride = true
						end
					elseif (input ~= "") then
						print("Number? Hello?")
					end
				elseif (officePhase == 2) then
					print("Some shady person's trying to sell a weird machine to us for 800 but we're pretty sure it's worth like 200. Should we buy it? [Yes] [No]")
					if (input == "yes") then
						officePhase = -1
						officeFailText = "DoTAM: Oh wow, that was actually a money-printing machine. We have won capitalism, thanks for your help."
						input = ""
						inputOverride = true
					elseif (input == "no") then
						officePhase = 3
						input = ""
						inputOverride = true
					elseif (input ~= "") then
						print("English? Hello?")
					end
				elseif (officePhase == 3) then
					print("A minecraft villager's offering to trade a cubic meter of sand for 6 emeralds, should we buy it? [Yes] [No]")
					if (input == "yes" or input == "oui") then
						officePhase = -1
						officeFailText = "DoTAM: Oh wow, that was actually the only villager in ever to sell sand and now we have partnered up with them. We have won capitalism, thanks for your help."
						input = ""
						inputOverride = true
					elseif (input == "no" or input == "non") then
						officePhase = 4
						input = ""
						inputOverride = true
					elseif (input ~= "") then
						print("Anglais? Bonjour?")
					end
				elseif (officePhase == 4) then
					print("A devil looking dude says if we give them 2000 he'll spare our lives. Should we give him 2000? [Yes] [No]")
					if (input == "yes" or input == "devil yes") then
						officePhase = 0
						finishLocation("DoTAM: We as a team decided to throw you outa da windo' because you've almost made us broke. (+2 Faith)","sponge of faith","for broken robots")
						locationComplete[7] = true
					elseif (input == "no" or input == "devil no") then
						officePhase = -1
						officeFailText = "DoTAM: Oh wow, he said \"Sabotage eh? I like it.\" and gave us 102 duodecillion. We have won capitalism, thanks for your help."
						input = ""
						inputOverride = true
					elseif (input ~= "") then
						print("Devil English? Devil Hello?")
					end					
				elseif (officePhase == -1) then
					drawPic("officeFail")
					print(officeFailText)
					print("(You wont get anything of course, you are a robot after all...)")
					print("\n(Too) Bad Ending! [Roll back time]")
					if (input == "roll back time") then
						officePhase = 0
						input = ""
						inputOverride = true
					end
				end
			elseif (currentLocation == "pizzeria") then
				drawPic("pizzeria")
				if (input == "talk") then
					if (isPizza) then
						print("You already have a pizza to take care of. (See: Inventory)")
					else
						if (pizzaNum == 0) then
							print("Secondary Chef: Hello youngling, you have come for work haven't you? Here's a pizza take it to the correct address, you'll get your pay once you've delivered all the pizzas. (Inventory)")
						elseif (pizzaNum == #pizzaPos) then
							finishLocation("Secondary Chef: Well done! You have delivered all the pizzas in existence, here's a medal. (Inventory)","pizza medal","address: your hearth <3")
							pizzaNum = -1
							locationComplete[8] = true
						else
							print("Secondary Chef: Nice job! Here's the next pizza. (Inventory)")
						end
						pizzaNum = pizzaNum + 1
						isPizza = true
					end
				elseif (input == "dd") then
					print("Not here you A")
				elseif (input == "ddtalk" or input == "talkdd") then
					print("Whae")
				else
					print(locationText["pizzeria"])
				end
			elseif (currentLocation == "final") then
				if (isLavaRemoved) then
					drawPic("waterLake")
					print("Well done, you have purified the lava. Please enter \"end\" to end your adventures on this island and get to a so called \"credits scene\"")
					print("Pro tip: Type \"leave\" to check the water lake from above")
					if (input == "credits scene" or input == "credits") then
						print("Sorry, you must type \"end\" to end")
					elseif (input == "credits schene") then
						print("That's not even how you spell it")
					elseif (input == "end") then
						print("Thank you for playing Frog Fractions 2")
						run = false
					end
				else
					drawPic("lavaLake")
					completion = 0
					for i = 1, #locationComplete, 1 do
						if (locationComplete[i]) then
							completion = completion + 1
						end
					end
					if (completion < #locationComplete) then
						print("This place is for lava purifiers only. If you wish to purify you must complete everything you can complete in this island")
						print("Completion: " .. completion .. "/" .. #locationComplete)
						print("Type \"hint\" to get a hint on an available quest")
						if (input == "hint") then
							hints = {}
							for i = 1, #locationComplete, 1 do
								if (not locationComplete[i]) then
									hints[#hints + 1] = locationHints[i]
								end
							end
							if (#hints > 0) then
								print(hints[math.random(1,#hints)])
							end
						end
					else
						print("Completion: Done!\nIf you wish to purify, enter \"purify lava\"")
						if (input == "purify lava") then
							for i = 12, 15, 1 do
								for j = 26, 32, 1 do
									if (worldMap[i][j][2] == 15) then worldMap[i][j][2] = 12 end
									if (worldMap[i][j][2] == 2) then worldMap[i][j][2] = 10 end
									
									if (worldMap[i][j][3] == 15) then worldMap[i][j][3] = 12 end
									if (worldMap[i][j][3] == 2) then worldMap[i][j][3] = 10 end
									if (worldMap[i][j][3] == 5) then worldMap[i][j][3] = 4 end
								end
							end
							isLavaRemoved = true
							input = ""
							inputOverride = true
						end
					end
				end
			end
			
			if (textNextFrame["frame"] == 0) then
				print(textNextFrame["text"])
			end
		end
	end
end
